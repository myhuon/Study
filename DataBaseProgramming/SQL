# emp, dept, salgrade 테이블을 이용하여 SQL 질의 작성


1. 20번 부서나 30번 부서에 속하고 이름에 ‘AR’이 포함된 사원들의 이름과 부서번호, 업무(job)를구하시오. (where절, OR 또는 IN, LIKE 연산자 이용)
: SELECT ename, deptno, job 
  FROM emp e 
  WHERE ① (deptno = 30 OR deptno = 20) ② deptno IN ( 30, 20 ) 
          AND ename LIKE '%AR%';

2. RESEARCH 부서에서 일하는 사원들 중 급여가 2,000이하인 사원들의 수를 구하시오. 

(a) join을 이용하는 질의 
: SELECT COUNT(*) AS emp_num 
  FROM dept d JOIN emp e ON d.deptno = e.deptno
  WHERE d.dname = 'RESEARCH' AND e.sal <= 2000;

(b) subquery를 이용하는 질의 
: SELECT COUNT(*) AS emp_num
  FROM emp 
  WHERE sal <= 2000 AND deptno IN ( SELECT deptno
  		                        FROM dept 
                                        WHERE dname = 'RESEARCH')

SELECT
    COUNT(*) AS emp_num
FROM
    dept d, (SELECT sal, deptno FROM emp WHERE sal <= 2000) e
WHERE
    d.deptno = e.deptno AND d.dname = 'RESEARCH';
    
3. 사원들 중 급여등급이 5에 속하면서 수당(comm)이 500미만인 사원들의 이름과 급여, 수당을구하고 “연봉”을 계산하시오. 단, 수당을 모를 경우 0으로 간주함 (non-equi-join, NVL 이용) // 연봉 = sal + comm * 12
: SELECT ename, sal, comm, grade, sal*12+comm AS real_sal
  FROM (SELECT ename, sal, NVL(comm, 0) AS comm, grade
	  FROM salgrade s, emp e
	  WHERE s.losal <= e.sal AND s.hisal >= e.sal) g
  WHERE g.grade = 5 AND g.comm < 500;





4. 모든 사원들의 이름, 입사일, 재직년수(만으로 계산), “퇴사예정일”(재직한지 30년 되는 수년간의 서비스날)을 구하시오. 입사일은 “OOOO년 OO월 OO일” 형식으로 출력하고, 입사일이 빠른 사원부터 순서대로 출력할 것 (SYSDATE, date 타입 연산/함수, 타입변환 함수, 버림 함수 이용) 재직년수 = 현재시간 - 입사일
: SELECT ename, TO_CHAR(hiredate, 'YYYY"년" MM"월" DD"일"') AS hiredate, TRUNC(MONTHS_BETWEEN(SYSDATE, hiredate)/12, 0) AS yearOfService, ADD_MONTHS(hiredate, 360) AS retirement_date
FROM emp
ORDER BY hiredate;

5. 각 부서에서 같은 업무를 수행하는 사원들을 분류하여 부서번호, 업무명, 인원수, 평균 급여를출력하시오. (group by절, 집계 함수 이용)
: SELECT deptno, job, COUNT(*) AS emp_num, AVG(sal) AS sal_avg
FROM emp
GROUP BY (deptno, job);

6. 사원이 2명 이상 있는 부서들에 대해 부서명과 평균 급여를 각각 구하시오. (having절 이용) (선택) 위 질의를 having절을 사용하지 않고 derived relation(subquery)을 사용하여 작성하시오.

1)SELECT dname,  sal_avg
FROM dept d JOIN (SELECT deptno, AVG(sal) AS sal_avg
			FROM emp
			GROUP BY deptno
			HAVING COUNT(*) >= 2) g ON d.deptno = g.deptno;

2)SELECT dname,  sal_avg
FROM dept d JOIN (SELECT deptno, AVG(sal) AS sal_avg, COUNT(*) AS emp_num
			FROM emp
			GROUP BY deptno) g ON d.deptno = g.deptno
WHERE emp_num >= 2;
	

7. 모든 부서에 대해 부서명과 사원수, 최대급여를 각각 구하시오. 단, 사원이 한 명도 없는 부서도 결과에 포함되어야 함 (outer-join 이용)퇴사예정일
: SELECT dname, emp_num, sal_max
FROM dept d LEFT OUTER JOIN 
		(SELECT deptno, COUNT(*) emp_num, MAX(sal) sal_max
		FROM emp
		GROUP BY deptno) g ON d.deptno = g.deptno;









8. 각 사원에 대해 같은 부서에 근무하는 동료 사원들의 이름을 구하시오. (self-join 이용) (참고: 위 질의의 결과는 두 사원의 이름 쌍들의 집합임. Oracle에서 제공하는 LISTAGG 함수를사용하면 각 사원에 대해 모든 동료 사원들의 이름 리스트를 하나의 행에 출력할 수 있음) // 오라클 버전 11이상 사용 가능 함수임..

1) LISTAGG 함수 이용
SELECT e.ename, LISTAGG(m.ename, ', ') WITHIN GROUP(ORDER BY ename) AS colleague
FROM emp e JOIN emp m ON e.deptno = m.deptno

2) LISTAGG 함수 이용 X
SELECT e.ename AS "employee", c.ename AS "colleague"
FROM emp c JOIN emp e ON e.deptno = c.deptno
WHERE e.deptno = c.deptno;


9. 각 사원의 이름, 급여, “공제액”을 출력하되 급여가 가장 많은 사원부터 순서대로 출력하시오. 단, 공제액은 급여가 1000미만인 경우 급여의 1%, 급여가 1000이상 2000미만인 경우 1.5%, 급여가 2000이상인 경우는 2%에 해당하는 금액으로 계산함 (CASE WHEN, 정렬 이용)
: SELECT ename, sal, 
	CASE WHEN sal < 1000 THEN sal * 0.01
	      WHEN sal >= 1000 AND sal < 2000 THEN sal * 0.015
	      WHEN sal >= 2000 THEN sal * 0.02
	END AS deductible
FROM emp
ORDER BY sal desc;


